services:
  mongodb:
    build:
      context: .
      dockerfile: dockerfile.mongo
    container_name: "${MONGO_CONTAINER_NAME}"
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - "${MONGO_PATH}:/data/db"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      # MongoDB root credentials
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_PASSWORD}"
      ME_CONFIG_MONGODB_SERVER: mongodb

      # Mongo Express Web UI login
      ME_CONFIG_BASICAUTH_USERNAME: "${MONGO_EXPRESS_USER}"
      ME_CONFIG_BASICAUTH_PASSWORD: "${MONGO_EXPRESS_PASSWORD}"
    depends_on:
      - mongodb
  nginx:
    build:
      context: .
      dockerfile: dockerfile.nginx
    container_name: "nginx"
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - "${NGINX_VOLUMES}:/var/www/data"
      - "${NGINX_VOLUMES}${NGINX_VOLUMES_LOG}:/var/log/nginx"
      - "${NGINX_VOLUMES}${NGINX_VOLUMES_UPLOAD}:/var/www/data/upload"
  spring-boot:
    build:
      context: .
      dockerfile: dockerfile.spring.boot
    container_name: spring-boot
    depends_on:
      - mongodb
      - nginx
    ports:
      - "${UAT_SPRING_BOOT_PORT}:${UAT_SPRING_BOOT_PORT}"
    env_file:
      - .env

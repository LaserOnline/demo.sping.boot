package com.example.demo.sping.boot.service.content;

import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.util.List;

import javax.imageio.ImageIO;

import org.apache.tika.Tika;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.junit.jupiter.api.Test;

import com.example.demo.sping.boot.config.Config;
public class ContentServiceConvertToJpegTest {

    // step 4
    private final ContentService contentService = new ContentService(new Config());
    private final Tika tika = new Tika();

    @Test
    void validateAndConvertToJpeg_shouldConvertPngToJpeg() throws Exception {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á PNG ‡∏à‡∏≤‡∏Å BufferedImage
        BufferedImage bufferedImage = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write(bufferedImage, "png", baos);
        byte[] pngBytes = baos.toByteArray();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô PNG ‡∏à‡∏£‡∏¥‡∏á ‡πÜ
        assertEquals("image/png", tika.detect(pngBytes));

        // ‡πÅ‡∏õ‡∏•‡∏á
        List<byte[]> result = contentService.validateAndConvertToJpeg(List.of(pngBytes));
        assertEquals(1, result.size());

        byte[] jpegResult = result.get(0);

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô image/jpeg
        String detectedMime = tika.detect(jpegResult);
        System.out.println("üîç MIME after conversion: " + detectedMime);
        assertEquals("image/jpeg", detectedMime);
    }

    @Test
    void validateAndConvertToJpeg_shouldSkipIfAlreadyJpeg() throws Exception {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á JPEG ‡∏à‡∏≤‡∏Å BufferedImage
        BufferedImage bufferedImage = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ImageIO.write(bufferedImage, "jpg", baos);
        byte[] jpegBytes = baos.toByteArray();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô JPEG ‡∏à‡∏£‡∏¥‡∏á ‡πÜ
        assertEquals("image/jpeg", tika.detect(jpegBytes));

        // ‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÅ‡∏õ‡∏•‡∏á
        List<byte[]> result = contentService.validateAndConvertToJpeg(List.of(jpegBytes));
        assertEquals(1, result.size());

        byte[] output = result.get(0);

        // ‚úÖ ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô MIME type
        assertEquals("image/jpeg", tika.detect(output));
    }
    // step 4
}